{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stree\\\\Never_Late\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Paper } from '@mui/material';\nimport ClockLoader from \"react-spinners/ClockLoader\";\nimport Calendar from './Calendar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [assignments, setAssignments] = useState([]);\n\n  const calculateStartDateTime = (date, time) => {\n    if (time.includes('p')) {\n      time = time.replace('p', '');\n      let hm = time.split(\":\");\n      hm[0] = String(parseInt(hm[0]) + 10);\n      hm = hm.join(\":\");\n      return date + ' ' + hm;\n    } else {\n      time = time.replace('a', '');\n      let hm = time.split(\":\");\n      hm[0] = String(parseInt(hm[0]) - 2);\n      hm = hm.join(\":\");\n      return date + ' ' + hm;\n    }\n  };\n\n  const calculateEndDateTime = (date, time) => {\n    if (time.includes('p')) {\n      time = time.replace('p', '');\n      let hm = time.split(\":\");\n      hm[0] = String(parseInt(hm[0]) + 12);\n      hm = hm.join(\":\");\n      return date + ' ' + hm;\n    }\n\n    return date + ' ' + time.replace('a', '');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchAssignment = async () => {\n      await axios.get(`/profile/calendar`, {\n        params: {\n          user: props.auth.user.username\n        }\n      }).then(res => {\n        let parsedAssignment = []; // eslint-disable-next-line array-callback-return\n\n        res.data.assignments.map(assignment => {\n          let parsedData = {\n            Id: 0,\n            Subject: 'Title',\n            StartTime: null,\n            EndTime: null,\n            IsAllDay: false,\n            IsReadonly: true\n          };\n          parsedData.Id = assignment._id;\n          parsedData.Subject = assignment.Subject;\n          parsedData.StartTime = new Date(calculateStartDateTime(assignment['Due Date'], assignment.Time));\n          parsedData.EndTime = new Date(calculateEndDateTime(assignment['Due Date'], assignment.Time));\n          parsedAssignment.push(parsedData);\n        });\n        setAssignments(parsedAssignment);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    setTimeout(() => {\n      setLoading(false);\n    }, fetchAssignment()); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!props.auth.isAuthenticated && props.history.push(\"/\"), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      pr: 2,\n      pl: 2,\n      children: loading ? /*#__PURE__*/_jsxDEV(ClockLoader, {\n        size: 60,\n        color: \"#123abc\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        display: \"grid\",\n        gridAutoFlow: \"column\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              textAlign: \"center\",\n              padding: \"5%\",\n              minHeight: \"45vh\",\n              width: \"40%\",\n              minWidth: \"300px\"\n            },\n            children: \"Add Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: 2,\n            children: /*#__PURE__*/_jsxDEV(Calendar, {\n              assignments: assignments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"uFE85hvpPYZFYO+KuyM6N7cGAE4=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/stree/Never_Late/client/src/components/Dashboard.js"],"names":["React","useEffect","useState","Grid","Paper","ClockLoader","Calendar","axios","Dashboard","props","loading","setLoading","assignments","setAssignments","calculateStartDateTime","date","time","includes","replace","hm","split","String","parseInt","join","calculateEndDateTime","fetchAssignment","get","params","user","auth","username","then","res","parsedAssignment","data","map","assignment","parsedData","Id","Subject","StartTime","EndTime","IsAllDay","IsReadonly","_id","Date","Time","push","catch","err","console","log","setTimeout","isAuthenticated","history","textAlign","padding","minHeight","width","minWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Grid, Paper } from '@mui/material';\r\nimport ClockLoader from \"react-spinners/ClockLoader\";\r\nimport Calendar from './Calendar';\r\nimport axios from 'axios';\r\n\r\nexport default function Dashboard(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [assignments, setAssignments] = useState([]);\r\n\r\n    const calculateStartDateTime = (date, time) => {\r\n        if (time.includes('p')) {\r\n            time = time.replace('p', '')\r\n            let hm = time.split(\":\")\r\n            hm[0] = String(parseInt(hm[0]) + 10)\r\n            hm = hm.join(\":\")\r\n            return date + ' ' + hm\r\n        } else {\r\n            time = time.replace('a', '')\r\n            let hm = time.split(\":\")\r\n            hm[0] = String(parseInt(hm[0]) - 2)\r\n            hm = hm.join(\":\")\r\n            return date + ' ' + hm\r\n        }\r\n    }\r\n    \r\n    const calculateEndDateTime = (date, time) => {\r\n        if (time.includes('p')) {\r\n            time = time.replace('p', '')\r\n            let hm = time.split(\":\")\r\n            hm[0] = String(parseInt(hm[0]) + 12)\r\n            hm = hm.join(\":\")\r\n            return date + ' ' + hm\r\n        }\r\n        return date + ' ' + time.replace('a','')\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        const fetchAssignment = async () => {\r\n            await axios.get(`/profile/calendar`,\r\n                {\r\n                    params: {\r\n                        user: props.auth.user.username\r\n                    }\r\n                })\r\n                .then((res) => {\r\n                    let parsedAssignment = []\r\n                    // eslint-disable-next-line array-callback-return\r\n                    res.data.assignments.map(assignment => {\r\n                        let parsedData = {\r\n                            Id: 0,\r\n                            Subject: 'Title',\r\n                            StartTime: null,\r\n                            EndTime: null,\r\n                            IsAllDay: false,\r\n                            IsReadonly: true,\r\n                        }\r\n                        parsedData.Id = assignment._id\r\n                        parsedData.Subject = assignment.Subject\r\n                        parsedData.StartTime = new Date(calculateStartDateTime(assignment['Due Date'], assignment.Time))\r\n                        parsedData.EndTime = new Date(calculateEndDateTime(assignment['Due Date'], assignment.Time))\r\n                        parsedAssignment.push(parsedData)\r\n                    })\r\n                    setAssignments(parsedAssignment)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        },fetchAssignment())\r\n    // eslint-disable-next-line\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            {!props.auth.isAuthenticated && props.history.push(\"/\")}\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\" pr={2} pl={2}>\r\n                {loading ?\r\n                    <ClockLoader\r\n                        size={60}\r\n                        color={\"#123abc\"}\r\n                        loading={loading}\r\n                    />\r\n                    :\r\n                    <Grid container display=\"grid\" gridAutoFlow=\"column\" spacing={1}>\r\n                        <Grid item>\r\n                            <Paper sx={{ textAlign: \"center\", padding: \"5%\", minHeight: \"45vh\", width: \"40%\", minWidth: \"300px\" }} >\r\n                                Add Courses\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Paper sx={2}>\r\n                                <Calendar assignments={assignments} />\r\n                            </Paper>\r\n                        </Grid>\r\n                        {/* <Grid item>\r\n                            <Paper sx={{textAlign: \"center\", padding:\"5%\", minHeight:\"45vh\", width:\"40%\", minWidth:\"300px\"}} >\r\n                                Due Today\r\n                            </Paper>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                        \r\n                }\r\n            </Grid>\r\n            \r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}